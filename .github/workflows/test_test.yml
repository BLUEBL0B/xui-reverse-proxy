name: Update Unique Views Badge

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Каждый день в полночь

jobs:
  fetch_traffic:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Fetch traffic data from GitHub API
      id: fetch_traffic
      run: |
        # Получаем данные о трафике с GitHub API, используя переменную ${{ github.repository }}
        response=$(curl -H "Authorization: token ${{ secrets.PUBLIC_REPO_TOKEN }}" \
                         -H "Accept: application/vnd.github.v3+json" \
                         https://api.github.com/repos/${{ github.repository }}/traffic/views)

        # Извлекаем общее количество просмотров и уникальных просмотров
        total_views=$(echo "$response" | jq '.count')
        unique_views=$(echo "$response" | jq '.uniques')
        echo ${total_views}

        # Формируем URL для картинки с уникальными просмотрами
        badge_total_url="https://img.shields.io/badge/Unique%20Views-$total_views-blue"
        badge_unique_url="https://img.shields.io/badge/Unique%20Views-$unique_views-blue"
        echo ${badge_total_url}

        # Сохраняем URL в Environment File
        echo "BADGE_TOTAL_URL=$badge_total_url" >> $GITHUB_ENV
        echo "BADGE_UNIQUE_URL=$badge_unique_url" >> $GITHUB_ENV

    - name: Update badge in test.md
      run: |
        # Проверяем, что BADGE_TOTAL_URL не пустой
        if [ -z "$BADGE_TOTAL_URL" ]; then
          echo "Error: Badge URL is empty."
          exit 1
        fi
        # Проверяем, что BADGE_UNIQUE_URL не пустой
        if [ -z "$BADGE_UNIQUE_URL" ]; then
          echo "Error: Badge URL is empty."
          exit 1
        fi
        echo ${BADGE_TOTAL_URL}
          
        # Обновляем файл с новым значением
        sed -i "s|!\[Total Views Badge](.*)|![Total Views Badge](${BADGE_TOTAL_URL})|" test.md
        sed -i "s|!\[Unique Views Badge](.*)|![Unique Views Badge](${BADGE_UNIQUE_URL})|" test.md

        #sed -i \
        #  -e "s/\${USERNAME}/username/g" \
        #  -e "s/\${HASH}/hash/g" \
        #  AdGuardHome/AdGuardHome.yaml

    - name: Set git configuration
      run: |
        git config --global user.name "cortez24rus"
        git config --global user.email "cortez24rus@gmail.com"

    - name: Pull latest changes
      run: |
        git pull origin main || echo "No changes to pull"

    - name: Commit and push changes to test.md
      run: |
        git add test.md
        git commit -m "Update unique views badge in test.md" || echo "No changes to commit"
        git push origin main
